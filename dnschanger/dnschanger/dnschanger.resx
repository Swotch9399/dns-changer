<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL56LQC+ei0EvnotPr56LaC+ei3gvnot+756
        Lfy+ei3lvnotq756LUq+ei0HvnotAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL97KwC+ei0AvnotEb56LYO+ei3pvnot/756
        Lf++ei3/vnot/756Lf++ei3/vnot7756LZS+ei0avnotAL56LQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvnotAL56LRG+ei2hvnot/b56
        Lf++ei3/vnot/756Lea+ei3gvnot/r56Lf++ei3/vnot/756Lbe+ei0dvnotAL57JwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL56LQC+ei0Dvnothb56
        Lf2+ei3/vnot/756Lf++ei3mvnotP756LSu+ei3Svnot/756Lf++ei3/vnot/756LaG+ei0KvnotAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+eiwAvnotAL56
        LTu+ei3rvnot/756Lf++ei3/vnot/756Lc2+ei0QvnotAr56La2+ei3/vnot/756Lf++ei3/vnot9756
        LVe+ei0AvnotAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL56
        LQC+ei0Avnotk756Lf++ei3/vnot/756Lf++ei3/vnotzL56LQ++ei0CvnotrL56Lf++ei3/vnot/756
        Lf++ei3/vnottL56LQm+ei0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAvnotAL56LRS+ei3Qvnot/756Lf++ei3/vnot/756Lf++ei2tvnotCbh6MwC+ei2Mvnot/756
        Lf++ei3/vnot/756Lf++ei3nvnotKb56LQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC+ei0AvnotKr56Lem+ei3/vnot/756Lf++ei3/vnot1b56LSe+ei0AvnotAL56
        LRW+ei27vnot/756Lf++ei3/vnot/756Lfi+ei1IvnotAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAL56LQC+ei07vnot8756Lf++ei3/vnot/756Lf++ei2VvnotAL56
        LQC+eisAvnotAL56LXG+ei3/vnot/756Lf++ei3/vnot/r56LVu+ei0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvnotAL56LUu+ei36vnot/756Lf++ei3/vnot/756
        LaK+ei0DvnotAL56LQC+ei0AvnotgL56Lf++ei3/vnot/756Lf++ei3/vnotbr56LQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+ei0AvnotXb56Lf6+ei3/vnot/756
        Lf++ei3/vnot6r56LVC+ei0DvXksAb56LTe+ei3Yvnot/756Lf++ei3/vnot/756Lf++ei2CvnotAL15
        LAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL56LQC+ei1wvnot/756
        Lf++ei3/vnot/756Lf++ei3/vnot6756La2+ei2lvnot4b56Lf++ei3/vnot/756Lf++ei3/vnot/756
        LZa+ei0AvnosAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvnotAL56
        LW2+ei3/vnot/756Lf++ei3/vnot/756Lf++ei3/vnot/756Lf++ei3/vnot/756Lf++ei3/vnot/756
        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
        AB///4Af//+AH///iD///8B///+Af///gf8=
</value>
  </data>
</root>